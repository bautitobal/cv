---
import ThemeSwitcher from "./ThemeSwitcher.astro";
import LanguageSwitcher from "./LanguageSwitcher.astro";
---

<nav class="navbar no-print">
  <div class="navbar-content">
    <div class="navbar-left">
      <a href="/" class="navbar-brand">
        <span class="text-gradient">BT</span>
      </a>
    </div>
    <div class="navbar-right">
      <LanguageSwitcher />
      <ThemeSwitcher />
      
      <button id="mobile-menu-toggle" class="mobile-menu-toggle" aria-label="Toggle menu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>
    </div>
  </div>
</nav>

<div id="mobile-menu" class="mobile-menu">
  <div class="mobile-menu-content">
    <div class="mobile-menu-header">
      <button id="close-mobile-menu" class="close-mobile-menu" aria-label="Close menu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    <div class="mobile-menu-items">
      <div class="mobile-theme-switcher-label">
        <span data-en="Theme" data-es="Tema">Theme</span>
      </div>
      <div class="mobile-theme-switcher"></div>
      <div class="mobile-language-switcher-label">
        <span data-en="Language" data-es="Idioma">Language</span>
      </div>
      <div class="mobile-language-switcher"></div>
    </div>
  </div>
</div>

<script>
  // Función para añadir transparencia al hacer scroll
  function handleScroll() {
    const navbar = document.querySelector('.navbar');
    if (!navbar) return;
    
    if (window.scrollY > 10) {
      navbar.classList.add('scrolled');
    } else {
      navbar.classList.remove('scrolled');
    }
  }
  
  // Inicialización
  document.addEventListener('DOMContentLoaded', () => {
    // Event listeners para scroll
    window.addEventListener('scroll', handleScroll);
    
    // Manejo del menú móvil
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const closeMobileMenu = document.getElementById('close-mobile-menu');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.add('active');
        document.body.style.overflow = 'hidden'; // Evitar scroll cuando el menú está abierto
      });
    }
    
    if (closeMobileMenu && mobileMenu) {
      closeMobileMenu.addEventListener('click', () => {
        mobileMenu.classList.remove('active');
        document.body.style.overflow = ''; // Restaurar scroll
      });
    }
    
    // Mover los selectores de tema e idioma al menú móvil
    const themeSwitcher = document.querySelector('.theme-switcher');
    const languageSwitcher = document.querySelector('.language-switcher');
    const mobileThemeSwitcherContainer = document.querySelector('.mobile-theme-switcher');
    const mobileLangSwitcherContainer = document.querySelector('.mobile-language-switcher');
    
    // Función para clonar un elemento y aplicarle los eventos necesarios
    function cloneWithEvents(original: Element | null, container: Element | null, buttonSelector: string, mobileMenu: HTMLElement | null) {
      if (!original || !container || !mobileMenu) return;
      
      // TypeScript: verificar que original es un Element antes de acceder a sus propiedades
      if (original instanceof Element) {
        const clone = original.cloneNode(true) as HTMLElement;
        clone.classList.add('is-mobile');
        container.appendChild(clone);
        
        // Replicar la funcionalidad de los botones
        const buttons = clone.querySelectorAll(buttonSelector);
        const originalButtons = original.querySelectorAll(buttonSelector);
        
        buttons.forEach((button, index) => {
          if (index < originalButtons.length) {
            const originalButton = originalButtons[index];
            
            button.addEventListener('click', () => {
              // TypeScript: verificar que originalButton es un HTMLElement antes de llamar a click()
              if (originalButton instanceof HTMLElement) {
                originalButton.click();
              }
              mobileMenu.classList.remove('active');
              document.body.style.overflow = '';
            });
          }
        });
      }
    }
    
    // Clonar los selectores para el menú móvil
    cloneWithEvents(themeSwitcher, mobileThemeSwitcherContainer, '.theme-button', mobileMenu);
    cloneWithEvents(languageSwitcher, mobileLangSwitcherContainer, '.lang-button', mobileMenu);
  });
</script>

<style>
  .navbar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 60px;
    background-color: var(--color-background);
    z-index: 1000;
    transition: all 0.3s ease;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }
  
  .navbar.scrolled {
    background-color: rgba(var(--color-background-rgb, 255, 255, 255), 0.8);
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .navbar-content {
    max-width: 700px;
    margin: 0 auto;
    padding: 0 1rem;
    height: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }
  
  .navbar-brand {
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
    color: var(--color-text);
  }
  
  .navbar-right {
    display: flex;
    align-items: center;
    gap: 16px;
  }
  
  /* Estilo para el texto CV del navbar */
  .text-gradient {
    background: linear-gradient(to right, var(--color-primary), var(--color-secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-weight: bold;
  }
  
  /* Mobile menu toggle button */
  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    color: var(--color-text);
    cursor: pointer;
    padding: 8px;
    border-radius: 4px;
  }
  
  .mobile-menu-toggle:hover {
    background-color: var(--color-card-hover);
  }
  
  /* Mobile menu */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 2000;
    display: flex;
    justify-content: flex-end;
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s linear 0.3s, opacity 0.3s ease;
  }
  
  .mobile-menu.active {
    visibility: visible;
    opacity: 1;
    transition-delay: 0s;
  }
  
  .mobile-menu-content {
    width: 80%;
    max-width: 300px;
    height: 100%;
    background-color: var(--color-background);
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    transform: translateX(100%);
    transition: transform 0.3s ease;
    padding: 20px;
    display: flex;
    flex-direction: column;
  }
  
  .mobile-menu.active .mobile-menu-content {
    transform: translateX(0);
  }
  
  .mobile-menu-header {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 20px;
  }
  
  .close-mobile-menu {
    background: none;
    border: none;
    color: var(--color-text);
    cursor: pointer;
    padding: 8px;
    border-radius: 4px;
  }
  
  .close-mobile-menu:hover {
    background-color: var(--color-card-hover);
  }
  
  .mobile-menu-items {
    padding: 20px 0;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  
  .mobile-theme-switcher-label,
  .mobile-language-switcher-label {
    font-size: 1rem;
    font-weight: 500;
    color: var(--color-text);
    margin-bottom: 10px;
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }
    
    .navbar-content {
      padding: 0 0.75rem; /* Reducir el padding horizontal en móviles */
    }
    
    .navbar-right :global(.theme-switcher:not(.is-mobile)),
    .navbar-right :global(.language-switcher:not(.is-mobile)) {
      display: none;
    }
    
    .mobile-theme-switcher :global(.theme-switcher.is-mobile),
    .mobile-language-switcher :global(.language-switcher.is-mobile) {
      position: static;
      transform: none;
    }
  }
  
  @media (max-width: 480px) {
    .navbar-brand {
      font-size: 1.25rem; /* Texto más pequeño en móviles muy pequeños */
    }
    
    .navbar-content {
      padding: 0 0.5rem; /* Padding aún más pequeño en móviles pequeños */
    }
  }
</style>