---
import { basics } from "@cv"
import Navbar from "@/components/Navbar.astro";
import { getCurrentLanguage, getPropertyBasedOnLanguage } from "@/i18n/utils";

interface Props {
	title: string;
}

const { title } = Astro.props;

const { image, url } = basics;
const summary = getPropertyBasedOnLanguage<string>(basics, 'summary', 'en');
---

<!doctype html>
<html lang="en" data-language="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={summary} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preload" as="image" href={image} />
		<meta name="generator" content={Astro.generator} />

		<meta property="og:url" content={url} />
		<meta property="og:type" content="website" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={summary} />
		<meta property="og:image" content="" />

		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:domain" content={url.split("//")[1] ?? ''} />
		<meta property="twitter:url" content={url} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={summary} />
		<meta name="twitter:image" content="" />
		<title>{title}</title>
		
		<!-- Script para detecci贸n inicial de tema e idioma -->
		<script is:inline>
			// Detecta el tema preferido inmediatamente para evitar flash
			(function() {
				const theme = localStorage.getItem('preferred-theme') || 'system';
				const isDark = 
					theme === 'dark' || 
					(theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
				
				document.documentElement.classList.toggle('dark', isDark);
				document.documentElement.setAttribute('data-theme', theme);
				
				// Detecta el idioma preferido
				const lang = localStorage.getItem('preferred-language') || 'en';
				document.documentElement.setAttribute('lang', lang);
				document.documentElement.setAttribute('data-language', lang);
				
				// Marcar como inicializado para que otros scripts lo sepan
				window.i18nInitialized = true;
			})();
		</script>
		
		<!-- Cargar el script de traducci贸n global -->
		<script>
			// Importar el inicializador de traducci贸n en cuanto se cargue el DOM
			document.addEventListener('DOMContentLoaded', () => {
				import('../i18n/translator.js').then(module => {
					module.initializeTranslator();
				});
			});
		</script>
	</head>
	<body>
		<Navbar />
		<main>
			<slot />
		</main>
	</body>
</html>
<style is:global>
	:root {
		/* Variables para tema claro (por defecto) */
		--color-background: #fff;
		--color-background-rgb: 255, 255, 255;
		--color-text: #111;
		--color-text-muted: #666;
		--color-primary: #0070f3;
		--color-secondary: #0050d0;
		--color-border: #eaeaea;
		--color-link: #0070f3;
		--color-card: #f9f9f9;
		--color-card-hover: #f3f3f3;
		--shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.04);
		--shadow-md: 0 2px 4px rgba(0, 0, 0, 0.08);
		
		/* Transiciones suaves */
		--theme-transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, fill 0.2s ease, stroke 0.2s ease;
	}
	
	html.dark {
		/* Variables para tema oscuro */
		--color-background: #121212;
		--color-background-rgb: 18, 18, 18;
		--color-text: #ffffff;
		--color-text-muted: #dadada;
		--color-primary: #3291ff;
		--color-secondary: #5db0ff;
		--color-border: #333;
		--color-link: #3291ff;
		--color-card: #1e1e1e;
		--color-card-hover: #252525;
		--shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.3);
		--shadow-md: 0 2px 4px rgba(0, 0, 0, 0.4);

		--theme-transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, fill 0.2s ease, stroke 0.2s ease;

		h2 {
			color: var(--color-text-muted);
		}

		a {
			color: var(--color-text) !important;
		}

		span .basics.label {
			color: var(--color-text) !important;
		}

		time {
			color: var(--color-text);
		}

		h4 {
			color: var(--color-secondary) !important;
		}

		h3 {
			color: var(--color-primary) !important;
		}

		footer {
			color: var(--color-text) !important;
		}

		footer .repo-code-link {
			color: var(--color-text) !important;
		}

		footer #normal-footer.no-print #text {
			color: var(--color-primary) !important;
		}

		a  svg {
			fill: var(--color-background) !important;
		}
	}

	html {
		font-family: Menlo, Monaco, Lucida Console, 'Courier New', Courier, monospace;
		background: var(--color-background);
		color: var(--color-text);
		letter-spacing: -0.025rem;
		transition: var(--theme-transition);
	}
	
	body, figure {
		margin: 0;
		padding: 0;
		transition: var(--theme-transition);
	}
	
	main {
		padding-top: 80px; /* Para compensar la altura de la barra de navegaci贸n */
	}

	a {
		text-decoration: none;
		color: var(--color-link);
		transition: var(--theme-transition);
	}

	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	*, *::before, *::after {
		box-sizing: border-box;
	}

	h1, h2, h3, h4 {
		margin: 0;
		font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
		color: var(--color-text);
		transition: var(--theme-transition);
	}

	p {
		color: var(--color-text-muted);
		font-size: .9rem;
		line-height: 1.5;
		margin: 0;
		text-wrap: pretty;
		transition: var(--theme-transition);
	}

	.print {
		display: none !important;
	}

	/* Estilos adicionales para el tema oscuro */
	html.dark img:not([src*=".svg"]) {
		filter: brightness(0.9);
	}
	
	html.dark svg {
		fill: var(--color-text);
	}

	@media print{
		.no-print {
			display: none !important;
		}

		.print {
			display: block !important;
		}

		astro-dev-toolbar {
			display: none !important;
		}

		article {
			break-inside: avoid;
		}
	}

</style>
